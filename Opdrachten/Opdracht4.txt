**********************************
*** OPDRACHT 4: Blokken maken! ***
**********************************

* Schrijf de code in de functie blokkenMaker() *

Nu moeten we blokken maken om te vernietigen!

Hiervoor gaan we arrays gebruiken en nog een handige techniek!

============================
===== A. Maak een blok =====
============================

TIP:

Net als opdracht 1 en 2 kun je een blok aanmaken op de volgende manier:

* Maak een variabele met de naam blok.
* Vul de variabele met een sprite, dit keer met:

naam = new Brick(0,0,'blauw');

Er is nu een 'blauw' naast de nulletjes. Dit is de kleur van het blok. Je kan kiezen tussen:
'rood'
'blauw'
'groen'

* Geef het blok een positie.

=================================
===== B. Maak meer blokken! =====
=================================

TIP:

We willen natuurlijk meer blokken om te vernietigen, dan moeten we meer variabelen maken!

De code zal ziets eruit zien:

blok = new Brick(0,0,'blauw');
blok1 = new Brick(0,0,'rood');
blok2 = new Brick(0,0,'groen');

Maar als we 20 blokken willen, dan hebben we te veel variabelen! Dan gaat de spel langzamer werken en
de code wordt slordig. Om dit te voorkomen, gaan we gebruik maken van een Array!

voorbeeld: 

// een lege array
var naam = [];

// een gevulde array
var naam = ['1', '2', 'drie'];

// een item toevoegen
naam.push('iets');

of

naam.push(new iets(0,0));

Met het voorbeeld hierboven kun je een array met blokken maken!

Zelf doen:

* Verwijder de variabele en code van blok.
* Maak een array variabele met de naam blokken.
* Vul de array met 5 blokken.

=================
===== EXTRA =====
=================

Het is leuk om blokjes te positioneren, maar het is wel een hoop werk! Gelukkig is er een makkelijk manier
om de blokken te maken en te positioneren met de hulp van een for loop en een techniek die vaak in games wordt
gebruikt!

Kijk naar de functie blokGenerator() om te kijken hoe het werkt!

Benieuwd?

Zet de functie in blokMaker() en kijk hoe het werkt! Je kan de functie oproepen in de volgende manier:

blokGenerator();

Speel met de waarden van de blokKleur array om iets leuks te maken!

Als je meer blokken wilt kun je ze zelf makkelijk toevoegen aan de blokKleur array.

Voorbeeld:

blokKleur = [
    '1', '1', '1', '1', '1', '1', '1', '1',
    '1', '1'
];


LET OP! Niet de andere waarden veranderen, anders gaat het allemaal mis!